; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M031\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=536 --omf_browse=.\obj\main.crf ..\main.c]
                          THUMB

                          AREA ||i.GPABGH_IRQHandler||, CODE, READONLY, ALIGN=2

                  GPABGH_IRQHandler PROC
;;;19     
;;;20     void GPABGH_IRQHandler(void)
000000  b508              PUSH     {r3,lr}
;;;21     {
;;;22         volatile uint32_t temp;
;;;23     
;;;24         /* To check if PB.2 interrupt occurred */
;;;25         if(GPIO_GET_INT_FLAG(PB, BIT2))
000002  480a              LDR      r0,|L1.44|
000004  6a01              LDR      r1,[r0,#0x20]
000006  0749              LSLS     r1,r1,#29
000008  d508              BPL      |L1.28|
;;;26         {
;;;27             GPIO_CLR_INT_FLAG(PB, BIT2);
00000a  2104              MOVS     r1,#4
00000c  6201              STR      r1,[r0,#0x20]
;;;28             printf("PB.2 INT occurred.\n");
00000e  a008              ADR      r0,|L1.48|
000010  f7fffffe          BL       __2printf
;;;29     			PB14=0;
000014  490b              LDR      r1,|L1.68|
000016  2000              MOVS     r0,#0
000018  6388              STR      r0,[r1,#0x38]
;;;30         }
;;;31         else
;;;32         {
;;;33             /* Un-expected interrupt. Just clear all PB interrupts */
;;;34             temp = PB->INTSRC;
;;;35             PB->INTSRC = temp;
;;;36             printf("Un-expected interrupts.\n");
;;;37     		
;;;38         }
;;;39     }
00001a  bd08              POP      {r3,pc}
                  |L1.28|
00001c  6a01              LDR      r1,[r0,#0x20]         ;34
00001e  9100              STR      r1,[sp,#0]            ;35
000020  6201              STR      r1,[r0,#0x20]         ;35
000022  a009              ADR      r0,|L1.72|
000024  f7fffffe          BL       __2printf
000028  bd08              POP      {r3,pc}
;;;40     
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40004040
                  |L1.48|
000030  50422e32          DCB      "PB.2 INT occurred.\n",0
000034  20494e54
000038  206f6363
00003c  75727265
000040  642e0a00
                  |L1.68|
                          DCD      0x40004840
                  |L1.72|
000048  556e2d65          DCB      "Un-expected interrupts.\n",0
00004c  78706563
000050  74656420
000054  696e7465
000058  72727570
00005c  74732e0a
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0

                          AREA ||i.SYS_Init||, CODE, READONLY, ALIGN=2

                  SYS_Init PROC
;;;40     
;;;41     void SYS_Init(void)
000000  b570              PUSH     {r4-r6,lr}
000002  2059              MOVS     r0,#0x59
000004  4c15              LDR      r4,|L2.92|
000006  2216              MOVS     r2,#0x16
000008  2188              MOVS     r1,#0x88
                  |L2.10|
00000a  6020              STR      r0,[r4,#0]
00000c  6022              STR      r2,[r4,#0]
00000e  6021              STR      r1,[r4,#0]
000010  6823              LDR      r3,[r4,#0]
000012  2b00              CMP      r3,#0
000014  d0f9              BEQ      |L2.10|
;;;42     {
;;;43         /* Unlock protected registers */
;;;44         SYS_UnlockReg();
;;;45     
;;;46         /* Enable HIRC clock (Internal RC 48MHz) */
;;;47         CLK_EnableXtalRC(CLK_PWRCTL_HIRCEN_Msk);
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       CLK_EnableXtalRC
;;;48     
;;;49         /* Wait for HIRC clock ready */
;;;50         CLK_WaitClockReady(CLK_STATUS_HIRCSTB_Msk);
00001c  2010              MOVS     r0,#0x10
00001e  f7fffffe          BL       CLK_WaitClockReady
;;;51     
;;;52         /* Select HCLK clock source as HIRC and HCLK source divider as 1 */
;;;53         CLK_SetHCLK(CLK_CLKSEL0_HCLKSEL_HIRC, CLK_CLKDIV0_HCLK(1));
000022  2100              MOVS     r1,#0
000024  2007              MOVS     r0,#7
000026  f7fffffe          BL       CLK_SetHCLK
;;;54     
;;;55         /* Enable UART0 clock */
;;;56         CLK_EnableModuleClock(UART0_MODULE);
00002a  4d0d              LDR      r5,|L2.96|
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       CLK_EnableModuleClock
;;;57     
;;;58         /* Switch UART0 clock source to HIRC */
;;;59         CLK_SetModuleClock(UART0_MODULE, CLK_CLKSEL1_UART0SEL_HIRC, CLK_CLKDIV0_UART0(1));
000032  2103              MOVS     r1,#3
000034  2200              MOVS     r2,#0
000036  0609              LSLS     r1,r1,#24
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       CLK_SetModuleClock
;;;60     
;;;61         /* Update System Core Clock */
;;;62         SystemCoreClockUpdate();
00003e  f7fffffe          BL       SystemCoreClockUpdate
;;;63     
;;;64         /* Set PB multi-function pins for UART0 RXD=PB.12 and TXD=PB.13 */
;;;65         SYS->GPB_MFPH = (SYS->GPB_MFPH & ~(SYS_GPB_MFPH_PB12MFP_Msk | SYS_GPB_MFPH_PB13MFP_Msk))    |       \
000042  06a8              LSLS     r0,r5,#26
000044  6bc1              LDR      r1,[r0,#0x3c]
000046  22ff              MOVS     r2,#0xff
000048  0412              LSLS     r2,r2,#16
00004a  4391              BICS     r1,r1,r2
00004c  2233              MOVS     r2,#0x33
00004e  0452              LSLS     r2,r2,#17
000050  1889              ADDS     r1,r1,r2
000052  63c1              STR      r1,[r0,#0x3c]
000054  2000              MOVS     r0,#0
000056  6020              STR      r0,[r4,#0]
;;;66                         (SYS_GPB_MFPH_PB12MFP_UART0_RXD | SYS_GPB_MFPH_PB13MFP_UART0_TXD);
;;;67     
;;;68         /* Lock protected registers */
;;;69         SYS_LockReg();
;;;70     }
000058  bd70              POP      {r4-r6,pc}
;;;71     
                          ENDP

00005a  0000              DCW      0x0000
                  |L2.92|
                          DCD      0x40000100
                  |L2.96|
                          DCD      0x5f803d10

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;79     int32_t i32Err, i32TimeOutCnt;
;;;80     int main()
000000  f7fffffe          BL       SYS_Init
;;;81     {
;;;82         SYS_Init();
;;;83     
;;;84         /* Init UART0 to 115200-8n1 for print message */
;;;85         UART_Open(UART0, 115200);
000004  21e1              MOVS     r1,#0xe1
000006  0249              LSLS     r1,r1,#9
000008  4815              LDR      r0,|L3.96|
00000a  f7fffffe          BL       UART_Open
;;;86     	
;;;87         GPIO_SetMode(PB,BIT14, GPIO_MODE_OUTPUT);
00000e  4e15              LDR      r6,|L3.100|
000010  2201              MOVS     r2,#1
000012  0391              LSLS     r1,r2,#14
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       GPIO_SetMode
;;;88     	  GPIO_SetMode(PA,BIT0, GPIO_MODE_OUTPUT);
00001a  4812              LDR      r0,|L3.100|
00001c  2201              MOVS     r2,#1
00001e  4611              MOV      r1,r2
000020  3840              SUBS     r0,r0,#0x40
000022  f7fffffe          BL       GPIO_SetMode
;;;89     	
;;;90     		GPIO_SetMode(PB,BIT2, GPIO_MODE_INPUT);
000026  2200              MOVS     r2,#0
000028  2104              MOVS     r1,#4
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       GPIO_SetMode
;;;91       	GPIO_EnableInt(PB, 2, GPIO_INT_RISING);
000030  2201              MOVS     r2,#1
000032  0412              LSLS     r2,r2,#16
000034  2102              MOVS     r1,#2
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       GPIO_EnableInt
00003c  2501              MOVS     r5,#1
00003e  490a              LDR      r1,|L3.104|
000040  2010              MOVS     r0,#0x10
000042  6008              STR      r0,[r1,#0]
;;;92         NVIC_EnableIRQ(GPIO_PAPBPGPH_IRQn);
;;;93     	
;;;94     	
;;;95     	GPIO_SET_DEBOUNCE_TIME( GPIO_DBCTL_DBCLKSRC_LIRC, GPIO_DBCTL_DBCLKSEL_256);
000044  4909              LDR      r1,|L3.108|
000046  2038              MOVS     r0,#0x38
000048  6008              STR      r0,[r1,#0]
;;;96     	GPIO_ENABLE_DEBOUNCE(PB, PB2);
00004a  6971              LDR      r1,[r6,#0x14]
00004c  4c08              LDR      r4,|L3.112|
00004e  68a0              LDR      r0,[r4,#8]
000050  4301              ORRS     r1,r1,r0
000052  6171              STR      r1,[r6,#0x14]
;;;97     	
;;;98     	
;;;99         /* Connect UART to PC, and open a terminal tool to receive following message */
;;;100        printf("Hello World\n");
000054  a007              ADR      r0,|L3.116|
000056  f7fffffe          BL       __2printf
                  |L3.90|
;;;101    
;;;102        /* Got no where to go, just loop forever */
;;;103        while(1)
;;;104    		{
;;;105    			   
;;;106    				PB14=1;
00005a  63a5              STR      r5,[r4,#0x38]
00005c  e7fd              B        |L3.90|
;;;107    			
;;;108    		}
;;;109    }
;;;110    
                          ENDP

00005e  0000              DCW      0x0000
                  |L3.96|
                          DCD      0x40070000
                  |L3.100|
                          DCD      0x40004040
                  |L3.104|
                          DCD      0xe000e100
                  |L3.108|
                          DCD      0x40004440
                  |L3.112|
                          DCD      0x40004840
                  |L3.116|
000074  48656c6c          DCB      "Hello World\n",0
000078  6f20576f
00007c  726c640a
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=0

                  led_status
000000  00                DCB      0x00

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  i32Err
                          DCD      0x00000000

                          AREA ||area_number.8||, DATA, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.data||
                  i32TimeOutCnt
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_755bbbc3____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_755bbbc3____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_755bbbc3____REVSH|
#line 402
|__asm___6_main_c_755bbbc3____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
